name: Caller

on:
  issue_comment:
    types: [created]

jobs:
  trigger:
    name: Trigger event
    if: >
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, 'start') &&
      (
        contains(github.event.comment.body, 'child1') ||
        contains(github.event.comment.body, 'child2')
      )
    runs-on: ubuntu-latest
    steps:
      - name: Echo github event
        env:
          EVENT: '${{ toJson(github.event) }}'
        run: echo $EVENT

      - name: Echo github event
        run: echo ${{ github.ref }}

      - id: prData
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number: number });
            core.setOutput('ref', pr.head.ref)

      - name: child1
        if: >
          startsWith(github.event.comment.body, 'start') &&
          contains(github.event.comment.body, 'child1')
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: PR Child 1
          token: ${{ secrets.PRIVATE_TOKEN }}
          ref: ${{ steps.prData.outputs.ref }}

      - name: child2
        if: >
          startsWith(github.event.comment.body, 'start') &&
          contains(github.event.comment.body, 'child2')
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: PR Child 2
          token: ${{ secrets.PRIVATE_TOKEN }}
          ref: ${{ steps.prData.outputs.ref }}

      - name: React to comment - success or failure
        if: ${{ always() }}
        env:
          JOB_STATUS: ${{ job.status }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PRIVATE_TOKEN }}
          script: |
            const { owner, repo } = context.issue;
            const content = process.env.JOB_STATUS === 'success' ? '+1' : '-1'
            await github.rest.reactions.createForIssueComment({ owner, repo, comment_id: context.payload.comment.id, content });
